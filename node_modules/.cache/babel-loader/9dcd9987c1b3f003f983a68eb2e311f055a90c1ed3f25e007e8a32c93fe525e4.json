{"ast":null,"code":"var _jsxFileName = \"/Users/gavinappi-fy/healthcare-chat-frontend/src/components/DocumentUpload/DocumentUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { api } from '../../services/api';\nimport { useAppContext } from '../../App';\nimport { FiUpload } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_SIZE = 10 * 1024 * 1024; // 10MB\n\nexport default function DocumentUpload() {\n  _s();\n  const {\n    documents,\n    setDocuments\n  } = useAppContext();\n  const [isDragging, setIsDragging] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Validate file by extension (more reliable than MIME type)\n  const validateFile = file => {\n    const ext = file.name.split('.').pop().toLowerCase();\n    if (!['pdf', 'docx', 'txt'].includes(ext)) return 'Only PDF, DOCX, TXT allowed';\n    if (file.size > MAX_SIZE) return 'File too large (max 10MB)';\n    return null;\n  };\n  const handleDrop = useCallback(async e => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    await uploadFiles(files);\n  }, []);\n  const handleFileInput = async e => {\n    const files = Array.from(e.target.files);\n    await uploadFiles(files);\n    e.target.value = ''; // reset input\n  };\n  const uploadFiles = async files => {\n    setError('');\n    setUploading(true);\n    for (const file of files) {\n      const err = validateFile(file);\n      if (err) {\n        setError(err);\n        continue;\n      }\n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n        const res = await api.post('/documents/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setDocuments(prev => [...prev, res.data]);\n      } catch (err) {\n        console.error(err);\n        setError('Upload failed');\n      }\n    }\n    setUploading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg border\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-medium text-gray-700 mb-2\",\n      children: \"Upload Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onDragOver: e => {\n        e.preventDefault();\n        setIsDragging(true);\n      },\n      onDragLeave: () => setIsDragging(false),\n      onDrop: handleDrop,\n      className: `border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition ${isDragging ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-gray-400'}`,\n      children: [uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Uploading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FiUpload, {\n          className: \"mx-auto h-10 w-10 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: [\"Drag & drop files, or\", ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"text-blue-600 font-medium cursor-pointer\",\n            children: \"browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500\",\n          children: \"PDF, DOCX, TXT \\u2022 Max 10MB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \".pdf,.docx,.txt\",\n        onChange: handleFileInput,\n        className: \"hidden\",\n        id: \"file-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentUpload, \"ThSzWvjdVUxn3H7FFi/1nksw7J0=\", false, function () {\n  return [useAppContext];\n});\n_c = DocumentUpload;\nvar _c;\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","useCallback","api","useAppContext","FiUpload","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_SIZE","DocumentUpload","_s","documents","setDocuments","isDragging","setIsDragging","uploading","setUploading","error","setError","validateFile","file","ext","name","split","pop","toLowerCase","includes","size","handleDrop","e","preventDefault","files","Array","from","dataTransfer","uploadFiles","handleFileInput","target","value","err","formData","FormData","append","res","post","headers","prev","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDragLeave","onDrop","htmlFor","type","multiple","accept","onChange","id","_c","$RefreshReg$"],"sources":["/Users/gavinappi-fy/healthcare-chat-frontend/src/components/DocumentUpload/DocumentUpload.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { api } from '../../services/api';\nimport { useAppContext } from '../../App';\nimport { FiUpload } from 'react-icons/fi';\n\nconst MAX_SIZE = 10 * 1024 * 1024; // 10MB\n\nexport default function DocumentUpload() {\n  const { documents, setDocuments } = useAppContext();\n  const [isDragging, setIsDragging] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Validate file by extension (more reliable than MIME type)\n  const validateFile = (file) => {\n    const ext = file.name.split('.').pop().toLowerCase();\n    if (!['pdf', 'docx', 'txt'].includes(ext)) return 'Only PDF, DOCX, TXT allowed';\n    if (file.size > MAX_SIZE) return 'File too large (max 10MB)';\n    return null;\n  };\n\n  const handleDrop = useCallback(async (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    const files = Array.from(e.dataTransfer.files);\n    await uploadFiles(files);\n  }, []);\n\n  const handleFileInput = async (e) => {\n    const files = Array.from(e.target.files);\n    await uploadFiles(files);\n    e.target.value = ''; // reset input\n  };\n\n  const uploadFiles = async (files) => {\n    setError('');\n    setUploading(true);\n    for (const file of files) {\n      const err = validateFile(file);\n      if (err) {\n        setError(err);\n        continue;\n      }\n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n  \n        const res = await api.post('/documents/upload', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n  \n        setDocuments((prev) => [...prev, res.data]);\n      } catch (err) {\n        console.error(err);\n        setError('Upload failed');\n      }\n    }\n    setUploading(false);\n  };\n  \n\n  return (\n    <div className=\"bg-white p-4 rounded-lg border\">\n      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Upload Documents</label>\n      <div\n        onDragOver={(e) => { e.preventDefault(); setIsDragging(true); }}\n        onDragLeave={() => setIsDragging(false)}\n        onDrop={handleDrop}\n        className={`border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition ${\n          isDragging ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-gray-400'\n        }`}\n      >\n        {uploading ? (\n          <div className=\"flex flex-col items-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <p className=\"mt-2 text-gray-600\">Uploading...</p>\n          </div>\n        ) : (\n          <>\n            <FiUpload className=\"mx-auto h-10 w-10 text-gray-400\" />\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Drag & drop files, or{' '}\n              <label htmlFor=\"file-upload\" className=\"text-blue-600 font-medium cursor-pointer\">\n                browse\n              </label>\n            </p>\n            <p className=\"text-xs text-gray-500\">PDF, DOCX, TXT â€¢ Max 10MB</p>\n            {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n          </>\n        )}\n        <input\n          type=\"file\"\n          multiple\n          accept=\".pdf,.docx,.txt\"\n          onChange={handleFileInput}\n          className=\"hidden\"\n          id=\"file-upload\"\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}